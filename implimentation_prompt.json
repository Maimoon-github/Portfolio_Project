{
    "project_specification": {
        "title": "Django-React Full-Stack CMS with Advanced SEO Integration",
        "version": "1.0.0",
        "architecture_type": "Decoupled Frontend/Backend",
        "primary_objective": "Resolve content visibility issues between Django backend and React frontend while implementing comprehensive SEO optimization tools",
        "technical_stack": {
            "backend": {
                "framework": "Django 5.x",
                "api": "Django REST Framework 3.x",
                "database": "PostgreSQL/SQLite",
                "authentication": "JWT/Token-based",
                "caching": "Redis",
                "task_queue": "Celery"
            },
            "frontend": {
                "framework": "React 18.x",
                "build_tool": "Vite/Webpack",
                "state_management": "Context API/Redux Toolkit",
                "styling": "Tailwind CSS/Styled Components",
                "http_client": "Axios/Fetch API",
                "routing": "React Router v6"
            }
        }
    },

    "backend_django_implementation": {
        "project_structure": {
            "apps_architecture": {
                "content": {
                    "purpose": "Core content management functionality",
                    "models": [
                        "User (extends AbstractUser)",
                        "Category (hierarchical taxonomy)",
                        "Tag (content labeling)",
                        "BaseContent (abstract base for all content)",
                        "Blog (blog posts with reading time)",
                        "News (news articles with source)",
                        "Project (portfolio projects)",
                        "Course (educational content)",
                        "Page (static pages - NEW MODEL)"
                    ],
                    "admin_customizations": {
                        "rich_text_editor": "django-ckeditor with custom plugins",
                        "seo_analysis_panel": "Real-time SEO scoring widget",
                        "content_preview": "Live preview functionality",
                        "bulk_operations": "Publish/unpublish/export actions"
                    }
                },
                "api": {
                    "purpose": "RESTful API for frontend communication",
                    "viewsets": "ModelViewSet with custom filtering",
                    "serializers": "Nested serializers with computed fields",
                    "permissions": "Role-based access control",
                    "throttling": "Rate limiting per user role"
                },
                "seo": {
                    "purpose": "SEO optimization and analysis",
                    "services": "SEO scoring algorithms",
                    "utils": "Meta tag generation, schema markup",
                    "management_commands": "Sitemap generation, SEO audits"
                }
            }
        },

        "critical_model_implementations": {
            "page_model_creation": {
                "class_definition": {
                    "inheritance": "BaseContent",
                    "additional_fields": {
                        "template": {
                            "type": "CharField",
                            "choices": ["default", "landing", "about", "contact", "portfolio"],
                            "max_length": 50,
                            "default": "default",
                            "help_text": "Page template for frontend rendering"
                        },
                        "page_order": {
                            "type": "IntegerField",
                            "default": 0,
                            "help_text": "Order for menu display"
                        },
                        "is_homepage": {
                            "type": "BooleanField",
                            "default": false,
                            "help_text": "Set as homepage"
                        },
                        "parent_page": {
                            "type": "ForeignKey",
                            "to": "self",
                            "null": true,
                            "blank": true,
                            "on_delete": "CASCADE",
                            "help_text": "Parent page for hierarchical structure"
                        },
                        "show_in_menu": {
                            "type": "BooleanField",
                            "default": true,
                            "help_text": "Display in navigation menu"
                        },
                        "menu_title": {
                            "type": "CharField",
                            "max_length": 100,
                            "blank": true,
                            "help_text": "Custom title for menu display"
                        },
                        "custom_fields": {
                            "type": "JSONField",
                            "default": "dict",
                            "blank": true,
                            "help_text": "Additional custom fields for flexible content"
                        }
                    }
                },
                "meta_class": {
                    "ordering": ["page_order", "title"],
                    "verbose_name": "Page",
                    "verbose_name_plural": "Pages"
                }
            },

            "enhanced_basecontent_seo": {
                "additional_seo_fields": {
                    "focus_keyword": {
                        "type": "CharField",
                        "max_length": 100,
                        "blank": true,
                        "help_text": "Primary SEO keyword for content optimization"
                    },
                    "secondary_keywords": {
                        "type": "TextField",
                        "blank": true,
                        "help_text": "Comma-separated secondary keywords"
                    },
                    "readability_score": {
                        "type": "DecimalField",
                        "max_digits": 4,
                        "decimal_places": 1,
                        "null": true,
                        "blank": true,
                        "help_text": "Flesch-Kincaid readability score"
                    },
                    "seo_score": {
                        "type": "IntegerField",
                        "null": true,
                        "blank": true,
                        "help_text": "Overall SEO score (0-100)"
                    },
                    "word_count": {
                        "type": "IntegerField",
                        "default": 0,
                        "help_text": "Total word count in content"
                    },
                    "estimated_reading_time": {
                        "type": "IntegerField",
                        "default": 0,
                        "help_text": "Estimated reading time in minutes"
                    },
                    "internal_links": {
                        "type": "JSONField",
                        "default": "list",
                        "blank": true,
                        "help_text": "Internal links found in content"
                    },
                    "external_links": {
                        "type": "JSONField",
                        "default": "list",
                        "blank": true,
                        "help_text": "External links found in content"
                    },
                    "schema_markup": {
                        "type": "JSONField",
                        "default": "dict",
                        "blank": true,
                        "help_text": "Structured data markup"
                    },
                    "social_media_preview": {
                        "type": "JSONField",
                        "default": "dict",
                        "blank": true,
                        "help_text": "Social media card preview data"
                    }
                }
            }
        },

        "api_configuration": {
            "viewset_implementations": {
                "base_content_viewset": {
                    "inheritance": "ModelViewSet",
                    "queryset_optimization": {
                        "published_filter": "status='published' AND publish_date__lte=now() AND deleted_at__isnull=True",
                        "select_related": ["author", "category"],
                        "prefetch_related": ["tags"],
                        "ordering": ["-publish_date", "-created_at"]
                    },
                    "permission_classes": ["AllowAny"],
                    "filterset_fields": ["category", "tags", "author", "is_featured", "status"],
                    "search_fields": ["title", "content", "excerpt", "meta_description"],
                    "ordering_fields": ["publish_date", "created_at", "title", "seo_score"]
                },
                "page_viewset": {
                    "inheritance": "BaseContentViewSet",
                    "additional_filters": ["template", "is_homepage", "show_in_menu"],
                    "custom_actions": {
                        "homepage": "Get homepage content",
                        "menu_items": "Get navigation menu structure",
                        "by_template": "Filter pages by template type"
                    }
                }
            },

            "serializer_implementations": {
                "content_serializer": {
                    "model": "BaseContent",
                    "fields": [
                        "id", "title", "slug", "content", "excerpt", "featured_image",
                        "author", "category", "tags", "status", "publish_date",
                        "meta_title", "meta_description", "meta_keywords",
                        "focus_keyword", "seo_score", "readability_score", "word_count",
                        "schema_markup", "created_at", "updated_at"
                    ],
                    "nested_serializers": {
                        "author": "UserSerializer",
                        "category": "CategorySerializer", 
                        "tags": "TagSerializer"
                    },
                    "computed_fields": {
                        "reading_time": "Calculate from word count",
                        "seo_analysis": "Real-time SEO scoring",
                        "social_preview": "Generate social media cards"
                    }
                }
            },

            "cors_and_security": {
                "cors_settings": {
                    "CORS_ALLOWED_ORIGINS": [
                        "http://localhost:3000",
                        "http://127.0.0.1:3000",
                        "https://yourdomain.com"
                    ],
                    "CORS_ALLOW_CREDENTIALS": true,
                    "CORS_ALLOWED_HEADERS": [
                        "accept", "accept-encoding", "authorization",
                        "content-type", "dnt", "origin", "user-agent",
                        "x-csrftoken", "x-requested-with"
                    ]
                },
                "drf_settings": {
                    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny"],
                    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
                    "PAGE_SIZE": 20,
                    "DEFAULT_THROTTLE_CLASSES": [
                        "rest_framework.throttling.AnonRateThrottle",
                        "rest_framework.throttling.UserRateThrottle"
                    ],
                    "DEFAULT_THROTTLE_RATES": {
                        "anon": "100/hour",
                        "user": "1000/hour"
                    }
                }
            }
        },

        "seo_optimization_engine": {
            "analysis_algorithms": {
                "keyword_density_analyzer": {
                    "target_density": "1-3%",
                    "calculation": "keyword_count / total_words * 100",
                    "penalties": "Over-optimization detection"
                },
                "readability_calculator": {
                    "method": "Flesch-Kincaid Reading Ease",
                    "formula": "206.835 - (1.015 × ASL) - (84.6 × ASW)",
                    "target_range": "60-70 for general audience"
                },
                "content_structure_analyzer": {
                    "heading_hierarchy": "Proper H1-H6 structure validation",
                    "paragraph_length": "Optimal paragraph size checking",
                    "list_usage": "Bullet point and numbered list analysis"
                }
            },

            "auto_optimization_features": {
                "meta_tag_generation": {
                    "title_optimization": "Extract from H1 or first 60 chars of title",
                    "description_generation": "First 160 chars of content or excerpt",
                    "keyword_extraction": "TF-IDF based keyword extraction"
                },
                "schema_markup_generation": {
                    "article_schema": "Automatic Article schema for blogs/news",
                    "course_schema": "Educational content schema for courses",
                    "organization_schema": "Publisher/author organization data"
                },
                "social_media_optimization": {
                    "og_tags": "Open Graph meta tags generation",
                    "twitter_cards": "Twitter Card meta tags",
                    "preview_generation": "Social media preview cards"
                }
            },

            "real_time_seo_scoring": {
                "scoring_factors": {
                    "title_optimization": "20 points",
                    "meta_description": "15 points",
                    "keyword_density": "20 points",
                    "readability": "15 points",
                    "content_length": "10 points",
                    "internal_links": "10 points",
                    "image_alt_text": "10 points"
                },
                "total_score": "Sum of all factors (0-100)",
                "recommendations": "Actionable improvement suggestions"
            }
        },

        "admin_interface_enhancements": {
            "rich_text_editor_integration": {
                "editor": "django-ckeditor",
                "custom_plugins": [
                    "SEO keyword highlighter",
                    "Readability indicator",
                    "Link analyzer",
                    "Image alt text validator",
                    "Word count display"
                ],
                "toolbar_configuration": [
                    "Bold", "Italic", "Underline", "Strike",
                    "Heading1", "Heading2", "Heading3",
                    "BulletedList", "NumberedList",
                    "Link", "Unlink", "Image", "Table",
                    "Blockquote", "CodeSnippet",
                    "SEOAnalyzer", "KeywordDensity"
                ]
            },

            "seo_analysis_panel": {
                "real_time_feedback": {
                    "keyword_density_gauge": "Visual percentage indicator",
                    "readability_meter": "Flesch-Kincaid score display",
                    "content_length_indicator": "Word count with recommendations",
                    "seo_score_dashboard": "Overall score with breakdown"
                },
                "improvement_suggestions": {
                    "title_recommendations": "Optimize title length and keywords",
                    "meta_description_tips": "Improve meta description",
                    "content_structure_advice": "Heading and paragraph optimization",
                    "link_building_suggestions": "Internal and external link recommendations"
                }
            }
        }
    },

    "frontend_react_implementation": {
        "project_architecture": {
            "folder_structure": {
                "src": {
                    "components": {
                        "common": ["Header", "Footer", "Navigation", "Sidebar"],
                        "content": ["BlogList", "BlogDetail", "NewsTimeline", "ProjectGallery"],
                        "pages": ["HomePage", "AboutPage", "ContactPage", "DynamicPage"],
                        "forms": ["ContactForm", "SearchForm", "CommentForm"],
                        "ui": ["Button", "Card", "Modal", "Spinner", "Toast"]
                    },
                    "hooks": {
                        "api": ["useApi", "useBlogPosts", "useProjects", "usePages"],
                        "auth": ["useAuth", "usePermissions"],
                        "utils": ["useLocalStorage", "useDebounce", "useIntersection"]
                    },
                    "services": {
                        "api": ["apiClient", "authService", "contentService"],
                        "utils": ["formatters", "validators", "constants"]
                    },
                    "contexts": ["AuthContext", "ThemeContext", "NotificationContext"],
                    "pages": ["BlogPage", "NewsPage", "ProjectsPage", "CoursesPage"],
                    "styles": ["globals.css", "components.css", "utilities.css"]
                }
            }
        },

        "api_integration_layer": {
            "api_client_configuration": {
                "base_configuration": {
                    "baseURL": "process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1'",
                    "timeout": 10000,
                    "headers": {
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    }
                },
                "interceptors": {
                    "request": "Add authentication token, handle loading states",
                    "response": "Handle errors, transform data, update loading states"
                },
                "error_handling": {
                    "network_errors": "Display user-friendly messages",
                    "api_errors": "Parse and display specific error messages",
                    "fallback_ui": "Show fallback content when API fails"
                }
            },

            "custom_hooks_implementation": {
                "useApi_hook": {
                    "purpose": "Generic API call hook with loading/error states",
                    "features": [
                        "Automatic loading state management",
                        "Error boundary integration",
                        "Request cancellation on unmount",
                        "Retry logic for failed requests",
                        "Cache management"
                    ],
                    "return_values": ["data", "loading", "error", "refetch"]
                },
                "useContent_hooks": {
                    "useBlogPosts": "Fetch and manage blog posts with pagination",
                    "useProjects": "Portfolio projects with filtering",
                    "useNews": "News articles with real-time updates",
                    "usePages": "Dynamic pages with navigation structure",
                    "useCourses": "Educational content with enrollment status"
                }
            }
        },

        "component_implementations": {
            "content_display_components": {
                "BlogList": {
                    "features": [
                        "Pagination with infinite scroll option",
                        "Category and tag filtering",
                        "Search functionality",
                        "Sort by date/popularity/relevance",
                        "Grid and list view options"
                    ],
                    "props": {
                        "category": "string | null",
                        "tags": "string[]",
                        "searchQuery": "string",
                        "sortBy": "'date' | 'popularity' | 'relevance'",
                        "viewMode": "'grid' | 'list'"
                    }
                },
                "ContentDetail": {
                    "features": [
                        "SEO meta tag injection",
                        "Social sharing buttons",
                        "Related content suggestions",
                        "Comment system integration",
                        "Reading progress indicator",
                        "Print-friendly formatting"
                    ],
                    "seo_integration": {
                        "meta_tags": "Dynamic title, description, keywords",
                        "structured_data": "JSON-LD schema markup injection",
                        "social_cards": "Open Graph and Twitter Card meta tags"
                    }
                },
                "DynamicPageRenderer": {
                    "purpose": "Render pages based on template type",
                    "template_support": [
                        "default: Standard page layout",
                        "landing: Hero section with CTA",
                        "about: Team and company information",
                        "contact: Contact form and information",
                        "portfolio: Project showcase grid"
                    ],
                    "props": {
                        "pageData": "PageData",
                        "template": "string",
                        "customFields": "Record<string, any>"
                    }
                }
            },

            "navigation_components": {
                "DynamicNavigation": {
                    "features": [
                        "Hierarchical menu support",
                        "Mobile-responsive design",
                        "Active page highlighting",
                        "Dropdown submenu support",
                        "Breadcrumb generation"
                    ],
                    "data_source": "Pages API with show_in_menu=true",
                    "accessibility": "ARIA labels, keyboard navigation, screen reader support"
                }
            }
        },

        "state_management": {
            "context_providers": {
                "ContentContext": {
                    "state": {
                        "blogs": "BlogPost[]",
                        "news": "NewsArticle[]",
                        "projects": "Project[]",
                        "pages": "Page[]",
                        "loading": "boolean",
                        "error": "string | null"
                    },
                    "actions": [
                        "fetchContent",
                        "refreshContent",
                        "clearError",
                        "setLoading"
                    ]
                },
                "SEOContext": {
                    "state": {
                        "metaTags": "MetaTag[]",
                        "structuredData": "StructuredData[]",
                        "canonicalUrl": "string",
                        "socialCards": "SocialCardData"
                    },
                    "actions": [
                        "updateMetaTags",
                        "setStructuredData",
                        "generateSocialCards"
                    ]
                }
            }
        },

        "seo_implementation": {
            "meta_tag_management": {
                "react_helmet_integration": {
                    "dynamic_titles": "Generate from content or fallback to default",
                    "meta_descriptions": "Extract from content or use custom",
                    "og_tags": "Open Graph for social media sharing",
                    "twitter_cards": "Twitter Card meta tags",
                    "canonical_urls": "Prevent duplicate content issues"
                }
            },
            "structured_data_injection": {
                "json_ld_schemas": {
                    "article": "Blog posts and news articles",
                    "course": "Educational content",
                    "organization": "Author/publisher information",
                    "breadcrumb": "Navigation breadcrumbs"
                }
            }
        },

        "routing_and_navigation": {
            "react_router_configuration": {
                "routes": [
                    "/ - HomePage (fetch homepage content)",
                    "/blog - BlogListPage",
                    "/blog/:slug - BlogDetailPage",
                    "/news - NewsListPage", 
                    "/news/:slug - NewsDetailPage",
                    "/projects - ProjectsPage",
                    "/projects/:slug - ProjectDetailPage",
                    "/courses - CoursesPage",
                    "/courses/:slug - CourseDetailPage",
                    "/:pageSlug - DynamicPageRenderer"
                ],
                "dynamic_routing": {
                    "page_routes": "Generated from Pages API",
                    "nested_pages": "Support for hierarchical page structure",
                    "fallback_handling": "404 page for invalid routes"
                }
            }
        }
    },

    "integration_testing_strategy": {
        "backend_api_validation": {
            "endpoint_testing": [
                "Verify published content filtering",
                "Test API response structure",
                "Validate CORS headers",
                "Check authentication flows",
                "Test pagination and filtering"
            ],
            "content_management_testing": [
                "Create/update/delete operations",
                "SEO field validation",
                "File upload functionality",
                "Version control system",
                "Publishing workflow"
            ]
        },

        "frontend_integration_testing": {
            "api_consumption": [
                "Test API error handling",
                "Validate data transformation",
                "Check loading states",
                "Test offline behavior",
                "Verify cache invalidation"
            ],
            "seo_functionality": [
                "Meta tag generation",
                "Structured data injection",
                "Social card previews",
                "Canonical URL handling",
                "Sitemap accessibility"
            ]
        },

        "end_to_end_validation": {
            "content_publishing_flow": [
                "Create content in Django admin",
                "Verify API endpoint returns content",
                "Confirm frontend displays content",
                "Check SEO tags are present",
                "Validate social sharing works"
            ],
            "page_management_flow": [
                "Create new page in admin",
                "Verify page appears in navigation",
                "Test dynamic routing works",
                "Confirm template rendering",
                "Validate custom fields display"
            ]
        }
    },

    "deployment_considerations": {
        "backend_deployment": {
            "production_settings": {
                "database": "PostgreSQL with connection pooling",
                "media_storage": "AWS S3 or similar cloud storage",
                "caching": "Redis for session and content caching",
                "task_queue": "Celery with Redis broker",
                "monitoring": "Django logging with external service"
            },
            "security_hardening": [
                "Environment variable management",
                "HTTPS enforcement",
                "CSRF protection",
                "Rate limiting",
                "Input sanitization"
            ]
        },

        "frontend_deployment": {
            "build_optimization": {
                "code_splitting": "Route-based and component-based",
                "lazy_loading": "Images and non-critical components",
                "bundle_analysis": "Webpack bundle analyzer",
                "performance_monitoring": "Core Web Vitals tracking"
            },
            "cdn_configuration": {
                "static_assets": "CSS, JS, images served via CDN",
                "api_caching": "Appropriate cache headers",
                "compression": "Gzip/Brotli compression enabled"
            }
        }
    },

    "success_metrics": {
        "technical_kpis": [
            "API response time < 200ms",
            "Frontend load time < 2 seconds",
            "SEO score improvement > 80/100",
            "Zero content display errors",
            "95%+ uptime reliability"
        ],
        "business_kpis": [
            "Content publishing efficiency increased",
            "SEO ranking improvements",
            "User engagement metrics improved",
            "Content management workflow streamlined",
            "Developer productivity enhanced"
        ]
    }
}
