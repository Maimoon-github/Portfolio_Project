# Generated by Django 5.2.6 on 2025-09-07 14:56

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name_plural": "categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=60)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("og_image", models.ImageField(blank=True, upload_to="og_images/")),
                ("focus_keyword", models.CharField(blank=True, max_length=100)),
                ("secondary_keywords", models.TextField(blank=True)),
                (
                    "readability_score",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=4, null=True
                    ),
                ),
                (
                    "seo_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("social_media_title", models.CharField(blank=True, max_length=60)),
                (
                    "social_media_description",
                    models.TextField(blank=True, max_length=160),
                ),
                (
                    "twitter_card_type",
                    models.CharField(
                        choices=[
                            ("summary", "Summary"),
                            ("summary_large_image", "Summary with Large Image"),
                        ],
                        default="summary",
                        max_length=20,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=200)),
                ("description", models.TextField()),
                ("thumbnail", models.ImageField(upload_to="course_thumbnails/")),
                ("price_cents", models.IntegerField(default=0)),
                ("is_free", models.BooleanField(default=False)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=15,
                    ),
                ),
                ("language", models.CharField(default="en", max_length=10)),
                ("duration_hours", models.DecimalField(decimal_places=1, max_digits=5)),
                ("prerequisites", models.TextField(blank=True)),
                ("learning_outcomes", models.JSONField(default=list)),
                ("certificate_available", models.BooleanField(default=True)),
                (
                    "categories",
                    models.ManyToManyField(blank=True, to="courses.category"),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        limit_choices_to={"role": "instructor"},
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="courses.tag")),
            ],
            options={
                "ordering": ["-published_at", "title"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=60)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("og_image", models.ImageField(blank=True, upload_to="og_images/")),
                ("focus_keyword", models.CharField(blank=True, max_length=100)),
                ("secondary_keywords", models.TextField(blank=True)),
                (
                    "readability_score",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=4, null=True
                    ),
                ),
                (
                    "seo_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("social_media_title", models.CharField(blank=True, max_length=60)),
                (
                    "social_media_description",
                    models.TextField(blank=True, max_length=160),
                ),
                (
                    "twitter_card_type",
                    models.CharField(
                        choices=[
                            ("summary", "Summary"),
                            ("summary_large_image", "Summary with Large Image"),
                        ],
                        default="summary",
                        max_length=20,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "lesson_type",
                    models.CharField(
                        choices=[
                            ("video", "Video Lesson"),
                            ("text", "Text Lesson"),
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                        ],
                        default="video",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("video_url", models.URLField(blank=True)),
                ("duration_minutes", models.PositiveIntegerField(default=0)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_required", models.BooleanField(default=True)),
                (
                    "is_preview",
                    models.BooleanField(
                        default=False, help_text="Available in course preview"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ["course", "order", "title"],
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("expired", "Expired"),
                            ("refunded", "Refunded"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("payment_id", models.CharField(blank=True, max_length=100)),
                ("amount_paid", models.IntegerField(default=0)),
                ("progress_percent", models.IntegerField(default=0)),
                ("last_accessed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-enrolled_at"],
                "unique_together": {("course", "user")},
            },
        ),
        migrations.CreateModel(
            name="LessonCompletion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completions",
                        to="courses.lesson",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_lessons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["completed_at"],
                "unique_together": {("lesson", "user")},
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.IntegerField()),
                ("comment", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("course", "user")},
            },
        ),
    ]
